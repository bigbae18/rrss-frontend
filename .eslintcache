[{"D:\\rrss\\rrss-frontend\\src\\index.js":"1","D:\\rrss\\rrss-frontend\\src\\App.js":"2","D:\\rrss\\rrss-frontend\\src\\reportWebVitals.js":"3","D:\\rrss\\rrss-frontend\\src\\components\\Navbar\\Navbar.js":"4","D:\\rrss\\rrss-frontend\\src\\components\\Home\\Home.js":"5","D:\\rrss\\rrss-frontend\\src\\components\\Register\\Register.js":"6","D:\\rrss\\rrss-frontend\\src\\components\\Login\\Login.js":"7","D:\\rrss\\rrss-frontend\\src\\utils\\validateInfo.js":"8","D:\\rrss\\rrss-frontend\\src\\components\\Register\\RegisterSuccess.js":"9","D:\\rrss\\rrss-frontend\\src\\utils\\LoadingCircle\\Loading.js":"10","D:\\rrss\\rrss-frontend\\src\\hooks\\useAuth.js":"11","D:\\rrss\\rrss-frontend\\src\\components\\Login\\LoginSuccess.js":"12"},{"size":604,"mtime":1611073394634,"results":"13","hashOfConfig":"14"},{"size":655,"mtime":1613400225942,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":707,"mtime":1613405958244,"results":"17","hashOfConfig":"14"},{"size":163,"mtime":1612975825856,"results":"18","hashOfConfig":"14"},{"size":4923,"mtime":1613401745625,"results":"19","hashOfConfig":"14"},{"size":3130,"mtime":1613409364805,"results":"20","hashOfConfig":"14"},{"size":1181,"mtime":1613409193682,"results":"21","hashOfConfig":"14"},{"size":493,"mtime":1613070052990,"results":"22","hashOfConfig":"14"},{"size":154,"mtime":1613068451023,"results":"23","hashOfConfig":"14"},{"size":2132,"mtime":1613409445409,"results":"24","hashOfConfig":"14"},{"size":620,"mtime":1613410050322,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"9euzqo",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\rrss\\rrss-frontend\\src\\index.js",[],["52","53"],"D:\\rrss\\rrss-frontend\\src\\App.js",[],"D:\\rrss\\rrss-frontend\\src\\reportWebVitals.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Navbar\\Navbar.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Home\\Home.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Register\\Register.js",["54"],"import './Register.css';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport RegisterSuccess from './RegisterSuccess';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\nimport validateRegisterInfo from '../../utils/validateInfo';\r\nimport Loading from '../../utils/LoadingCircle/Loading';\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [repassword, setRepassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const auth = useAuth();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(false);\r\n        if (Object.keys(errors).length === 0 && submitting) {\r\n            submit();\r\n            setSubmitting(true);\r\n        }\r\n    }, [errors])\r\n\r\n    const submit = async () => {\r\n        await auth.signUp({ username, password, email }).then(() => {\r\n            console.log('in here');\r\n            setSubmitting(false);\r\n            setSubmitted(true); \r\n            console.log(auth);\r\n        }).catch(err => {\r\n                setErrors({\r\n                    ...errors,\r\n                    database: err\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const values = {\r\n            username: username,\r\n            password: password,\r\n            repassword: repassword,\r\n            email: email\r\n        };\r\n        setErrors(validateRegisterInfo(values))\r\n        setSubmitting(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {submitted ? \r\n            <RegisterSuccess />\r\n            :\r\n            <div className=\"register-container\">\r\n                <h1>Register with us!</h1>\r\n                <div className=\"register-form\">\r\n                    {submitting ? \r\n                        <Loading /> \r\n                        :\r\n                        <>\r\n                            {errors.database && <p className=\"error-db\">{errors.database}</p>}\r\n                            <input \r\n                                            type=\"text\" \r\n                                            placeholder=\"Username...\" \r\n                                            required\r\n                                            value={username}\r\n                                            onChange={(e) => {\r\n                                                setUsername(e.target.value)\r\n                                            }}\r\n                                            />\r\n                            {errors.username && <p className=\"error-p\">{errors.username}</p>}\r\n                            <input \r\n                                            type=\"password\" \r\n                                            placeholder=\"Password...\" \r\n                                            required\r\n                                            value={password}\r\n                                            onChange={(e) => {\r\n                                                setPassword(e.target.value)\r\n                                            }}/>\r\n                            {errors.password && <p className=\"error-p\">{errors.password}</p>}\r\n                            <input \r\n                                            type=\"password\" \r\n                                            placeholder=\"Repeat your password...\" \r\n                                            required\r\n                                            value={repassword}\r\n                                            onChange={(e) => {\r\n                                                setRepassword(e.target.value)\r\n                                            }}/>\r\n                            {errors.repassword && <p className=\"error-p\">{errors.repassword}</p>}\r\n                            <input \r\n                                            type=\"email\" \r\n                                            placeholder=\"E-Mail...\" \r\n                                            required\r\n                                            value={email}\r\n                                            onChange={(e) => {\r\n                                                setEmail(e.target.value)\r\n                                            }}/>\r\n                            {errors.email && <p className=\"error-p\">{errors.email}</p>}\r\n                            <button className=\"register-button\" onClick={handleSubmit}>Register!</button>\r\n                        </>\r\n                    }\r\n                </div>\r\n                <p className=\"signed-up-p\">If you already have signed up, please <Link to=\"/login\" className=\"redirect-reg-a\">click here</Link>.</p>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register","D:\\rrss\\rrss-frontend\\src\\components\\Login\\Login.js",["55"],"D:\\rrss\\rrss-frontend\\src\\utils\\validateInfo.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Register\\RegisterSuccess.js",[],"D:\\rrss\\rrss-frontend\\src\\utils\\LoadingCircle\\Loading.js",[],"D:\\rrss\\rrss-frontend\\src\\hooks\\useAuth.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Login\\LoginSuccess.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":31,"column":8,"nodeType":"62","endLine":31,"endColumn":16,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"61","line":26,"column":8,"nodeType":"62","endLine":26,"endColumn":16,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'submit' and 'submitting'. Either include them or remove the dependency array.","ArrayExpression",["67"],["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"69","fix":"71"},"Update the dependencies array to be: [errors, submit, submitting]",{"range":"72","text":"73"},{"range":"74","text":"73"},[958,966],"[errors, submit, submitting]",[913,921]]