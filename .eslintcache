[{"D:\\rrss\\rrss-frontend\\src\\index.js":"1","D:\\rrss\\rrss-frontend\\src\\App.js":"2","D:\\rrss\\rrss-frontend\\src\\reportWebVitals.js":"3","D:\\rrss\\rrss-frontend\\src\\components\\Navbar\\Navbar.js":"4","D:\\rrss\\rrss-frontend\\src\\components\\Home\\Home.js":"5","D:\\rrss\\rrss-frontend\\src\\components\\Register\\Register.js":"6","D:\\rrss\\rrss-frontend\\src\\components\\Login\\Login.js":"7","D:\\rrss\\rrss-frontend\\src\\utils\\validateInfo.js":"8","D:\\rrss\\rrss-frontend\\src\\components\\Register\\RegisterSuccess.js":"9","D:\\rrss\\rrss-frontend\\src\\utils\\LoadingCircle\\Loading.js":"10","D:\\rrss\\rrss-frontend\\src\\hooks\\useAuth.js":"11","D:\\rrss\\rrss-frontend\\src\\components\\Profile\\Profile.js":"12","D:\\rrss\\rrss-frontend\\src\\components\\CreatePost\\CreatePost.js":"13","D:\\rrss\\rrss-frontend\\src\\components\\CreatePost\\PostValidation.js":"14","D:\\rrss\\rrss-frontend\\src\\components\\Engagement\\Engagement.js":"15","D:\\rrss\\rrss-frontend\\src\\components\\Profile\\ProfileInfo.js":"16","D:\\rrss\\rrss-frontend\\src\\components\\Profile\\ProfileUploads.js":"17"},{"size":604,"mtime":1611073394634,"results":"18","hashOfConfig":"19"},{"size":778,"mtime":1614614105850,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":720,"mtime":1614614122090,"results":"22","hashOfConfig":"19"},{"size":2535,"mtime":1614613826211,"results":"23","hashOfConfig":"19"},{"size":4923,"mtime":1613401745625,"results":"24","hashOfConfig":"19"},{"size":3377,"mtime":1614617653636,"results":"25","hashOfConfig":"19"},{"size":1181,"mtime":1613409193682,"results":"26","hashOfConfig":"19"},{"size":493,"mtime":1613070052990,"results":"27","hashOfConfig":"19"},{"size":154,"mtime":1613068451023,"results":"28","hashOfConfig":"19"},{"size":2663,"mtime":1614360658399,"results":"29","hashOfConfig":"19"},{"size":827,"mtime":1614614911739,"results":"30","hashOfConfig":"19"},{"size":1773,"mtime":1614356186166,"results":"31","hashOfConfig":"19"},{"size":289,"mtime":1614106344891,"results":"32","hashOfConfig":"19"},{"size":4204,"mtime":1614616216774,"results":"33","hashOfConfig":"19"},{"size":599,"mtime":1614614406620,"results":"34","hashOfConfig":"19"},{"size":1317,"mtime":1614617133060,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"9euzqo",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\rrss\\rrss-frontend\\src\\index.js",[],["76","77"],"D:\\rrss\\rrss-frontend\\src\\App.js",[],"D:\\rrss\\rrss-frontend\\src\\reportWebVitals.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Navbar\\Navbar.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Home\\Home.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Register\\Register.js",["78"],"import './Register.css';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport RegisterSuccess from './RegisterSuccess';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\nimport validateRegisterInfo from '../../utils/validateInfo';\r\nimport Loading from '../../utils/LoadingCircle/Loading';\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [repassword, setRepassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const auth = useAuth();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(false);\r\n        if (Object.keys(errors).length === 0 && submitting) {\r\n            submit();\r\n            setSubmitting(true);\r\n        }\r\n    }, [errors])\r\n\r\n    const submit = async () => {\r\n        await auth.signUp({ username, password, email }).then(() => {\r\n            console.log('in here');\r\n            setSubmitting(false);\r\n            setSubmitted(true); \r\n            console.log(auth);\r\n        }).catch(err => {\r\n                setErrors({\r\n                    ...errors,\r\n                    database: err\r\n                })\r\n            })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const values = {\r\n            username: username,\r\n            password: password,\r\n            repassword: repassword,\r\n            email: email\r\n        };\r\n        setErrors(validateRegisterInfo(values))\r\n        setSubmitting(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {submitted ? \r\n            <RegisterSuccess />\r\n            :\r\n            <div className=\"register-container\">\r\n                <h1>Register with us!</h1>\r\n                <div className=\"register-form\">\r\n                    {submitting ? \r\n                        <Loading /> \r\n                        :\r\n                        <>\r\n                            {errors.database && <p className=\"error-db\">{errors.database}</p>}\r\n                            <input \r\n                                            type=\"text\" \r\n                                            placeholder=\"Username...\" \r\n                                            required\r\n                                            value={username}\r\n                                            onChange={(e) => {\r\n                                                setUsername(e.target.value)\r\n                                            }}\r\n                                            />\r\n                            {errors.username && <p className=\"error-p\">{errors.username}</p>}\r\n                            <input \r\n                                            type=\"password\" \r\n                                            placeholder=\"Password...\" \r\n                                            required\r\n                                            value={password}\r\n                                            onChange={(e) => {\r\n                                                setPassword(e.target.value)\r\n                                            }}/>\r\n                            {errors.password && <p className=\"error-p\">{errors.password}</p>}\r\n                            <input \r\n                                            type=\"password\" \r\n                                            placeholder=\"Repeat your password...\" \r\n                                            required\r\n                                            value={repassword}\r\n                                            onChange={(e) => {\r\n                                                setRepassword(e.target.value)\r\n                                            }}/>\r\n                            {errors.repassword && <p className=\"error-p\">{errors.repassword}</p>}\r\n                            <input \r\n                                            type=\"email\" \r\n                                            placeholder=\"E-Mail...\" \r\n                                            required\r\n                                            value={email}\r\n                                            onChange={(e) => {\r\n                                                setEmail(e.target.value)\r\n                                            }}/>\r\n                            {errors.email && <p className=\"error-p\">{errors.email}</p>}\r\n                            <button className=\"register-button\" onClick={handleSubmit}>Register!</button>\r\n                        </>\r\n                    }\r\n                </div>\r\n                <p className=\"signed-up-p\">If you already have signed up, please <Link to=\"/login\" className=\"redirect-reg-a\">click here</Link>.</p>\r\n            </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register","D:\\rrss\\rrss-frontend\\src\\components\\Login\\Login.js",["79"],"import { useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport Loading from '../../utils/LoadingCircle/Loading';\r\nimport { validateLoginInfo } from '../../utils/validateInfo';\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [errors, setErrors] = useState({})\r\n\r\n    const auth = useAuth();\r\n\r\n    useEffect(() => {\r\n        setSubmitting(false);\r\n        console.log('in useeffect');\r\n        if (Object.keys(errors).length === 0 && submitting) {\r\n            console.log('no errors');\r\n            submit();\r\n            setSubmitting(true);\r\n        }\r\n    }, [errors])\r\n\r\n    const submit = async () => {\r\n        console.log('in submit');\r\n        await auth.signIn({ username, password }).then(() => {\r\n            setSubmitting(false);\r\n            setSubmitted(true);\r\n        }).catch(err => {\r\n            setErrors({\r\n                ...errors,\r\n                database: err\r\n            })\r\n        })\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const values = {\r\n            username: username,\r\n            password: password\r\n        }\r\n        console.log('handleSubmit');\r\n        setErrors(validateLoginInfo(values));\r\n        setSubmitting(true);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {submitted ?\r\n                <Redirect to=\"/\" />\r\n            :\r\n                <div className=\"login-container\">\r\n                    <h1>Login with your account</h1>\r\n                    <div className=\"login-form\">\r\n                        {submitting \r\n                        ? (<Loading />)\r\n                        : \r\n                        <>\r\n                            {errors.database && <p className=\"error-db\">{errors.database}</p>}\r\n                            <input\r\n                                placeholder=\"Username...\"\r\n                                required\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                    setUsername(e.target.value);\r\n                                }} \r\n                                />\r\n                            {errors.username && <p className=\"error-p\">{errors.username}</p>}\r\n                            <input\r\n                                placeholder=\"Password...\"\r\n                                required\r\n                                type=\"password\"\r\n                                onChange={(e) => {\r\n                                    setPassword(e.target.value);\r\n                                }} \r\n                                />\r\n                            {errors.password && <p className=\"error-p\">{errors.password}</p>}\r\n                            <button className=\"login-button\" onClick={handleSubmit}>Login!</button>\r\n                        </>\r\n                        }\r\n                    </div>\r\n                    <p className=\"not-acount-p\">You don't have an account? <Link to=\"/register\" className=\"redirect-log-a\">Register now</Link>!</p>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","D:\\rrss\\rrss-frontend\\src\\utils\\validateInfo.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Register\\RegisterSuccess.js",[],"D:\\rrss\\rrss-frontend\\src\\utils\\LoadingCircle\\Loading.js",[],"D:\\rrss\\rrss-frontend\\src\\hooks\\useAuth.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Profile\\Profile.js",["80","81"],"import { Redirect, useParams } from 'react-router-dom';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport ProfileInfo from './ProfileInfo';\r\nimport './Profile.css';\r\nimport ProfileUploads from './ProfileUploads';\r\n\r\nconst APIurl = 'http://localhost:3001';\r\n\r\nconst Profile = () => {\r\n\r\n    // const [errors, setErrors] = useState({});\r\n    const auth = useAuth();\r\n\r\n    const handleLogout = e => {\r\n        e.preventDefault();\r\n\r\n        auth.signOut();\r\n    }\r\n\r\n    return (\r\n        <>\r\n        { !auth.user \r\n            ? <Redirect to=\"/\" />\r\n            : (\r\n                <div className=\"profile-container\">\r\n                    <ProfileInfo logout={handleLogout} />\r\n                    <ProfileUploads />     \r\n                </div>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","D:\\rrss\\rrss-frontend\\src\\components\\CreatePost\\CreatePost.js",["82","83","84"],"import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport './CreatePost.css';\r\nimport validatePost from './PostValidation';\r\n\r\nconst APIurl = 'http://192.168.1.14:3001';\r\n\r\nfunction CreatePost({ refresh }) {\r\n\r\n    const [body, setBody] = useState('');\r\n    const [touched, setTouched] = useState(false);\r\n    const [submitted, setSubmitted] = useState(false);\r\n    const [error, setError] = useState({})\r\n\r\n    const auth = useAuth();\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(error).length === 0 && touched) {\r\n            submit();\r\n        }\r\n    }, [error])\r\n\r\n    const submit = () => {\r\n        axios.post(`${APIurl}/post/`, {\r\n            author: auth.user.username,\r\n            body: body\r\n        }).then(() => {\r\n            refresh()\r\n            setBody('');\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        setError(validatePost(body));\r\n    }\r\n    const handleChange = e => {\r\n        setTouched(true);\r\n        setBody(e.target.value)\r\n    }\r\n\r\n    return (\r\n        \r\n                <div className=\"create-post-container\">\r\n                    <h1>What happened today?</h1>\r\n                    <textarea value={body} onChange={handleChange} placeholder=\"Express yourself...\" />\r\n                    <p>255 characters max.</p>\r\n                    {error.body && <p className=\"error-p\">{error.body}</p>}\r\n                    <button \r\n                        type=\"submit\"\r\n                        onClick={e => {\r\n                            handleSubmit(e);\r\n                        }}>Create post!</button>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n\r\n","D:\\rrss\\rrss-frontend\\src\\components\\CreatePost\\PostValidation.js",[],["85","86"],"D:\\rrss\\rrss-frontend\\src\\components\\Engagement\\Engagement.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Profile\\ProfileInfo.js",[],"D:\\rrss\\rrss-frontend\\src\\components\\Profile\\ProfileUploads.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":31,"column":8,"nodeType":"93","endLine":31,"endColumn":16,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"92","line":25,"column":8,"nodeType":"93","endLine":25,"endColumn":16,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":1,"column":20,"nodeType":"98","messageId":"99","endLine":1,"endColumn":29},{"ruleId":"96","severity":1,"message":"100","line":7,"column":7,"nodeType":"98","messageId":"99","endLine":7,"endColumn":13},{"ruleId":"96","severity":1,"message":"101","line":13,"column":12,"nodeType":"98","messageId":"99","endLine":13,"endColumn":21},{"ruleId":"96","severity":1,"message":"102","line":13,"column":23,"nodeType":"98","messageId":"99","endLine":13,"endColumn":35},{"ruleId":"91","severity":1,"message":"103","line":22,"column":8,"nodeType":"93","endLine":22,"endColumn":15,"suggestions":"104"},{"ruleId":"87","replacedBy":"105"},{"ruleId":"89","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'submit' and 'submitting'. Either include them or remove the dependency array.","ArrayExpression",["109"],["110"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'APIurl' is assigned a value but never used.","'submitted' is assigned a value but never used.","'setSubmitted' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'submit' and 'touched'. Either include them or remove the dependency array.",["111"],["107"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},{"desc":"112","fix":"114"},{"desc":"115","fix":"116"},"Update the dependencies array to be: [errors, submit, submitting]",{"range":"117","text":"118"},{"range":"119","text":"118"},"Update the dependencies array to be: [error, submit, touched]",{"range":"120","text":"121"},[958,966],"[errors, submit, submitting]",[879,887],[633,640],"[error, submit, touched]"]